plugins {
    id 'base'
    id "io.freefair.git-version"
    id "io.freefair.javadocs"
    id "io.freefair.okhttp"
    id 'io.freefair.lombok' apply false
    id 'io.freefair.maven-central.validate-poms' apply false
    id 'org.jreleaser' version '1.18.0'
    id 'de.materna.cms.materna-metadata' version '3.8.2'
}

allprojects {

    group = "de.materna.cms.tools"

    project.plugins.withId("java") {
        java {
            toolchain {
                languageVersion.set(JavaLanguageVersion.of(8))
            }
            withSourcesJar()
            withJavadocJar()
        }

        tasks.withType(Jar).configureEach {
            manifest.attributes(
                    "Implementation-Version": project.version,
                    "Implementation-Vendor-Id": project.group,
                    "X-Gradle-Version": gradle.gradleVersion
            )
            into("META-INF") {
                from rootProject.file("NOTICE")
            }
        }

        dependencies {
            testImplementation platform("org.junit:junit-bom:5.12.2")
            testImplementation 'org.junit.jupiter:junit-jupiter'
            testImplementation 'org.assertj:assertj-core:3.27.3'

            testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
        }

        test {
            useJUnitPlatform()
        }
    }

    tasks.withType(Javadoc).configureEach {
        failOnError = false
    }

    plugins.withId("com.gradle.plugin-publish") {
        gradlePlugin {
            website = 'https://github.com/materna-se/cms-gradle-plugins/wiki'
            vcsUrl = 'https://github.com/materna-se/cms-gradle-plugins'
        }
    }

    plugins.withId("maven-publish") {
        project.apply plugin: 'io.freefair.maven-central.validate-poms'
        project.apply plugin: 'signing'

        signing {
            required = { !version.endsWith('SNAPSHOT') && gradle.taskGraph.hasTask("publish") }

            def signingKey = findProperty("signingKey")
            def signingPassword = findProperty("signingPassword")

            useInMemoryPgpKeys(signingKey, signingPassword)
        }

        publishing {
            publications.withType(MavenPublication) {
                signing.sign it
                pom {
                    name = provider { project.description }
                    description = provider { project.description }
                    inceptionYear = '2022'
                    url = "https://github.com/materna-se/cms-gradle-plugins"
                    licenses {
                        license {
                            name = "Apache-2.0"
                            url = "https://spdx.org/licenses/Apache-2.0.html"
                        }
                    }
                    developers {
                        developer {
                            id = "tremonia-oss"
                            name = "Tremonia OSS"
                            email = "tremonia-oss@materna.de"
                            timezone = "Europe/Berlin"
                        }
                        developer {
                            id = 'lgrefer'
                            name = 'Lars Grefer'
                            email = 'lars.grefer@materna.group'
                            timezone = 'Europe/Berlin'
                        }
                    }
                    scm {
                        connection = 'scm:git:https://github.com/materna-se/cms-gradle-plugins.git'
                        developerConnection = 'scm:git:ssh://git@github.com:materna-se/cms-gradle-plugins.git'
                        url = 'https://github.com/materna-se/cms-gradle-plugins'
                    }
                }
            }

            repositories {
                maven {
                    name = "mavenCentralStaging"
                    url = rootProject.layout.buildDirectory.dir('staging-deploy')
                }
            }
        }
    }

}

jreleaser {
    project {
        license = 'Apache-2.0'
        inceptionYear = '2022'
    }
    signing {
        active = 'NEVER'
    }
    release {
        github {
            repoOwner = "materna-se"
            name = "cms-gradle-plugins"
            tagName = "$version"
            skipTag = true
            overwrite = false
            update {
                enabled = true
            }
            releaseNotes {
                enabled = false
            }
            changelog {
                enabled = true
            }
        }
    }
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'RELEASE'
                    namespace = "de.materna"
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    sign = false //Already done by Gradle
                    checksums = false //Already done by Gradle
                    stagingRepository('build/staging-deploy')
                    retryDelay = 20
                }
            }
        }
    }
}

tasks.named('wrapper') {
    distributionType = Wrapper.DistributionType.ALL
}

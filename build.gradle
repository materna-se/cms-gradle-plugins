plugins {
    id "io.freefair.git-version"
    id "io.freefair.aggregate-javadoc"
    id "io.freefair.javadocs"
    id "io.freefair.okhttp"
    id 'io.freefair.lombok' apply false
    id "de.materna.cms.internal.gsb-publishing" version "1.5.1"
    id "de.materna.cms.internal.materna-metadata" version "1.5.1"
    id 'de.materna.cms.maven-publish-repo' version '3.6.2'
    id 'de.materna.cms.ci.java-logs' version '3.6.2'
}

allprojects {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }

    group = "de.materna.cms.tools"

    project.plugins.withId("java") {
        java {
            toolchain {
                languageVersion.set(JavaLanguageVersion.of(8))
            }
        }

        tasks.withType(Jar).configureEach {
            manifest.attributes(
                    "Implementation-Version": project.version,
                    "Implementation-Vendor": "Materna Information & Communications SE",
                    "Implementation-Vendor-Id": project.group,
                    "X-Gradle-Version": gradle.gradleVersion
            )
        }

        dependencies {
            testImplementation platform("org.junit:junit-bom:5.10.2")
            testImplementation 'org.junit.jupiter:junit-jupiter'
            testImplementation 'org.assertj:assertj-core:3.25.3'
        }

        test {
            useJUnitPlatform()
        }
    }

    plugins.withId("maven-publish") {
        publishing {
            publications.withType(MavenPublication) {
                pom {
                    description = project.description
                    inceptionYear = '2022'
                    organization {
                        name = 'Materna Information & Communications SE'
                        url = 'https://materna.de'
                    }
                    developers {
                        developer {
                            id = 'lgrefer'
                            name = 'Lars Grefer'
                            email = 'lars.grefer@materna.group'
                            timezone = 'Europe/Berlin'
                        }
                    }
                    scm {
                        connection = 'scm:git:https://bitbucket.materna.net/scm/gsb/cms-gradle-plugins.git'
                        developerConnection = 'scm:git:ssh://git@bitbucket.materna.net:7999/gsb/cms-gradle-plugins.git'
                        url = 'https://bitbucket.materna.net/projects/GSB/repos/cms-gradle-plugins'
                    }
                }
            }

            repositories {
                maven {
                    name = "artifactExtItz"
                    url = "https://artifact-ext.materna.net/repository/gsb_itzbund_mixed/"
                    credentials {
                        username = project.findProperty("materna.artifact-ext.username")
                        password = project.findProperty("materna.artifact-ext.password")
                    }
                }
                maven {
                    name = "artifactExtTremonia"
                    url = "https://artifact-ext.materna.net/repository/tremonia_mixed/"
                    credentials {
                        username = project.findProperty("materna.artifact-ext.username")
                        password = project.findProperty("materna.artifact-ext.password")
                    }
                }
            }
        }
    }

    tasks.withType(PublishToMavenRepository).configureEach {
        onlyIf("Nur Releases nach artifact-ext deployen") {
            def isArtifactExt = repository.name.contains("artifactExt") || repository.url.toString().contains("artifact-ext")
            def isSnapshot = project.version.toString().endsWith("-SNAPSHOT")

            return !(isSnapshot && isArtifactExt)
        }
    }
}

dependencies {
    javadoc project(":cms-build-plugin")
    javadoc project(":tracelog-aspect")
    javadoc project(":tracelog-plugin")
}

task uploadDocumentation(type: io.freefair.gradle.plugins.okhttp.tasks.UploadFile) {
    dependsOn "javadocJar"
    username = "user"
    password = "pGVte3FZm6HfbJ"
    file = javadocJar.archiveFile
    url = "http://docs.gsb.dev.materna.net/api/$project.version?path=cms-gradle-plugin"
}

tasks.named('wrapper') {
    distributionType = Wrapper.DistributionType.ALL
}
